apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Release.Name }}-worker-tap
    {{- if .Values.tap.labels }}
    {{- toYaml .Values.tap.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.tap.annotations }}
  annotations:
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
  name: {{ .Release.Name }}-worker-tap
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-worker-tap
      {{- if .Values.tap.labels }}
      {{- toYaml .Values.tap.labels | nindent 6 }}
      {{- end }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-worker-tap
        {{- if .Values.tap.labels }}
        {{- toYaml .Values.tap.labels | nindent 8 }}
        {{- end }}
      name: {{ .Release.Name }}-worker-tap
    spec:
      containers:
        - command:
            - ./worker
            - -i
            - any
            - -port
            - '{{ .Values.tap.port }}'
            - -servicemesh
            - -tls
            - -procfs
            - /hostproc
            {{ .Values.tap.config.debug | ternary "- -debug" "" }}
          image: '{{ .Values.tap.image.registry }}/{{ .Values.tap.image.name }}:{{ .Values.tap.image.tag }}'
          imagePullPolicy: {{ .Values.tap.imagepullpolicy }}
          name: kubeshark-worker-tap
          ports:
            - containerPort: {{ .Values.tap.port }}
              name: tap
          {{- if .Values.tap.resources }}
          resources:
            {{ toYaml .Values.tap.resources | nindent 12 }}   # Use the resources variable from the values file
          {{- end }}
          securityContext:
            capabilities:
              add:
                - NET_RAW
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_PTRACE
                - DAC_OVERRIDE
                - SYS_RESOURCE
              drop:
                - ALL
          volumeMounts:
            - mountPath: /hostproc
              name: proc
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            {{- if .Values.tap.persistentstorage }}
            - mountPath: /app/data
              name: persistent-worker-data
            {{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: {{ .Release.Name }}-service-account
      terminationGracePeriodSeconds: 0
      {{- if .Values.tap.tolerations }}
      tolerations:
        {{ toYaml .Values.tap.tolerations | nindent 8 }}   # Use the tolerations variable from the values file
      {{- end }}
      {{- if gt (len .Values.tap.nodeselectorterms) 0}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              {{- toYaml .Values.tap.nodeselectorterms | nindent 12 }}
        {{- end }}
      volumes:
        - hostPath:
            path: /proc
          name: proc
        - hostPath:
            path: /sys
          name: sys
        {{- if .Values.tap.persistentstorage }}
        - name: persistent-worker-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-persistent-worker-tap
        {{- end }}
